package GUI;

import Domain.*;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * @author Samim
 */

public class UserUI extends javax.swing.JFrame {

    private MobileCompany mobileCompany;
    private User user;
    private int userID;
    private String password;
    private Login login;
    private ArrayList<String> cities;
  
    public UserUI(MobileCompany mobileCompany, User user, int userID, String password, Login login, ArrayList<String> cities) {
        this.mobileCompany = mobileCompany;
        this.user = user;
        this.userID = userID;
        this.password = password;
        this.login = login;
        this.cities = cities;
        initComponents();
    }
    
    public User getUser(){
        return user;
    }
    
    public JTable getPlansInformationTable(){
        return plansInformationTable;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        popUpMenu = new javax.swing.JPopupMenu();
        updateMenu = new javax.swing.JMenuItem();
        deleteMenu = new javax.swing.JMenuItem();
        tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        userIDL = new javax.swing.JLabel();
        nameL = new javax.swing.JLabel();
        passwordL = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        streetNumberL = new javax.swing.JLabel();
        streetL = new javax.swing.JLabel();
        suburbL = new javax.swing.JLabel();
        cityL = new javax.swing.JLabel();
        userIDText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        passwordText = new javax.swing.JTextField();
        streetNumberText = new javax.swing.JTextField();
        streetText = new javax.swing.JTextField();
        suburbText = new javax.swing.JTextField();
        newCityText = new javax.swing.JTextField();
        cityChoice = new javax.swing.JComboBox<>();
        newCityCheck = new javax.swing.JCheckBox();
        changeButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        personalPlanChoice = new javax.swing.JRadioButton();
        businessPlanChoice = new javax.swing.JRadioButton();
        planIDL = new javax.swing.JLabel();
        planIDText = new javax.swing.JTextField();
        usernameL = new javax.swing.JLabel();
        usernameText = new javax.swing.JTextField();
        mobilePhoneL = new javax.swing.JLabel();
        modelL = new javax.swing.JLabel();
        modelText = new javax.swing.JTextField();
        priceL = new javax.swing.JLabel();
        memorySizeText = new javax.swing.JTextField();
        memorySizeL = new javax.swing.JLabel();
        priceText = new javax.swing.JTextField();
        typeL = new javax.swing.JLabel();
        typeChoice = new javax.swing.JComboBox<>();
        internetQuotaL = new javax.swing.JLabel();
        internetQuotaText = new javax.swing.JTextField();
        capLimitL = new javax.swing.JLabel();
        capLimitText = new javax.swing.JTextField();
        expiryDateL = new javax.swing.JLabel();
        dayL = new javax.swing.JLabel();
        dayText = new javax.swing.JTextField();
        monthL = new javax.swing.JLabel();
        monthText = new javax.swing.JTextField();
        yearL = new javax.swing.JLabel();
        yearText = new javax.swing.JTextField();
        planCityL = new javax.swing.JLabel();
        planCityText = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        ABNL = new javax.swing.JLabel();
        ABNText = new javax.swing.JTextField();
        numberOfEmployeesL = new javax.swing.JLabel();
        numberOfEmployeesText = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        planIDFindL = new javax.swing.JLabel();
        planIDFindText = new javax.swing.JTextField();
        findButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        plansTextArea = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        plansInformationTable = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        plansInformationTable1 = new javax.swing.JTable();
        mobileModelL1 = new javax.swing.JLabel();
        mobileModelText1 = new javax.swing.JTextField();
        expiryDateL1 = new javax.swing.JLabel();
        expiryDateText1 = new javax.swing.JTextField();
        filterByDateButton1 = new javax.swing.JButton();
        sortByUsernameCheck1 = new javax.swing.JCheckBox();
        menu = new javax.swing.JMenuBar();
        logoutButton = new javax.swing.JMenu();

        updateMenu.setText("update");
        updateMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMenuActionPerformed(evt);
            }
        });
        popUpMenu.add(updateMenu);

        deleteMenu.setText("delete");
        deleteMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMenuActionPerformed(evt);
            }
        });
        popUpMenu.add(deleteMenu);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tab.setToolTipText("");
        tab.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tab.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabStateChanged(evt);
            }
        });

        jPanel1.setDoubleBuffered(false);

        userIDL.setText("UserID");

        nameL.setText("Name");

        passwordL.setText("Password");

        address.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        address.setText("Address Information ->");

        streetNumberL.setText("Street Number");

        streetL.setText("Street");

        suburbL.setText("Suburb");

        cityL.setText("City");

        userIDText.setEditable(false);

        nameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameTextKeyPressed(evt);
            }
        });

        passwordText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordTextKeyPressed(evt);
            }
        });

        streetNumberText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                streetNumberTextKeyPressed(evt);
            }
        });

        streetText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                streetTextKeyPressed(evt);
            }
        });

        suburbText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                suburbTextKeyPressed(evt);
            }
        });

        newCityText.setEditable(false);
        newCityText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newCityTextKeyPressed(evt);
            }
        });

        cityChoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cityChoiceKeyPressed(evt);
            }
        });

        newCityCheck.setText("New City");
        newCityCheck.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                newCityCheckStateChanged(evt);
            }
        });

        changeButton.setBackground(new java.awt.Color(204, 204, 204));
        changeButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        changeButton.setForeground(new java.awt.Color(255, 51, 0));
        changeButton.setText("Change");
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformed(evt);
            }
        });
        changeButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                changeButtonKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cityL)
                            .addComponent(suburbL)
                            .addComponent(streetL)
                            .addComponent(streetNumberL))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cityChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(newCityText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(newCityCheck))
                            .addComponent(streetText, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(suburbText, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(streetNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(address)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userIDL)
                                    .addComponent(nameL)
                                    .addComponent(passwordL))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(userIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(changeButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(319, 319, 319)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(716, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userIDL)
                    .addComponent(userIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameL)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordL)
                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(address)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streetNumberL)
                    .addComponent(streetNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streetL)
                    .addComponent(streetText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suburbL)
                    .addComponent(suburbText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityL)
                    .addComponent(newCityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newCityCheck))
                .addGap(36, 36, 36)
                .addComponent(changeButton)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(227, Short.MAX_VALUE))
        );

        tab.addTab("Edit Personal Data", jPanel1);

        buttonGroup1.add(personalPlanChoice);
        personalPlanChoice.setSelected(true);
        personalPlanChoice.setText("Personal Plan");
        personalPlanChoice.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                personalPlanChoiceStateChanged(evt);
            }
        });

        buttonGroup1.add(businessPlanChoice);
        businessPlanChoice.setText("Business Plan");

        planIDL.setText("PlanID");

        planIDText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                planIDTextKeyPressed(evt);
            }
        });

        usernameL.setText("Username");

        usernameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameTextKeyPressed(evt);
            }
        });

        mobilePhoneL.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        mobilePhoneL.setText("Mobile Phone ->");

        modelL.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        modelL.setText("Model");

        modelText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                modelTextKeyPressed(evt);
            }
        });

        priceL.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        priceL.setText("Price");

        memorySizeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                memorySizeTextKeyPressed(evt);
            }
        });

        memorySizeL.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        memorySizeL.setText("Memory Size");

        priceText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceTextKeyPressed(evt);
            }
        });

        typeL.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        typeL.setText("OS Type");

        typeChoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                typeChoiceKeyPressed(evt);
            }
        });

        internetQuotaL.setText("Internet Quota");

        internetQuotaText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                internetQuotaTextKeyPressed(evt);
            }
        });

        capLimitL.setText("Cap Limit");

        capLimitText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                capLimitTextKeyPressed(evt);
            }
        });

        expiryDateL.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        expiryDateL.setText("Expiry Date ->");

        dayL.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        dayL.setText("Day");

        dayText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dayTextKeyPressed(evt);
            }
        });

        monthL.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        monthL.setText("Month");

        monthText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                monthTextKeyPressed(evt);
            }
        });

        yearL.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        yearL.setText("Year");

        yearText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yearTextKeyPressed(evt);
            }
        });

        planCityL.setText("City");

        planCityText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                planCityTextKeyPressed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(204, 204, 204));
        clearButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        clearButton.setForeground(new java.awt.Color(255, 51, 0));
        clearButton.setText("CLear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        clearButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                clearButtonKeyPressed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(204, 204, 204));
        addButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 51, 0));
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        addButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addButtonKeyPressed(evt);
            }
        });

        ABNL.setText("ABN");

        ABNText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ABNTextKeyPressed(evt);
            }
        });

        numberOfEmployeesL.setText("NO.Employee");

        numberOfEmployeesText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numberOfEmployeesTextKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mobilePhoneL)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameL)
                            .addComponent(planIDL))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(planIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(112, 112, 112)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearButton)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(internetQuotaL)
                            .addComponent(priceL)
                            .addComponent(capLimitL)
                            .addComponent(memorySizeL)
                            .addComponent(typeL)
                            .addComponent(modelL)
                            .addComponent(numberOfEmployeesL))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(numberOfEmployeesText)
                            .addComponent(ABNText)
                            .addComponent(planCityText)
                            .addComponent(yearText)
                            .addComponent(monthText)
                            .addComponent(dayText)
                            .addComponent(internetQuotaText)
                            .addComponent(priceText)
                            .addComponent(capLimitText)
                            .addComponent(memorySizeText)
                            .addComponent(typeChoice, 0, 102, Short.MAX_VALUE)
                            .addComponent(modelText)))
                    .addComponent(dayL)
                    .addComponent(monthL)
                    .addComponent(yearL)
                    .addComponent(planCityL)
                    .addComponent(ABNL)
                    .addComponent(expiryDateL)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(personalPlanChoice)
                        .addGap(18, 18, 18)
                        .addComponent(businessPlanChoice)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personalPlanChoice)
                    .addComponent(businessPlanChoice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planIDL)
                    .addComponent(planIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameL)
                    .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton))
                .addGap(18, 18, 18)
                .addComponent(mobilePhoneL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelL)
                    .addComponent(modelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memorySizeL)
                    .addComponent(memorySizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceL)
                    .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(internetQuotaL)
                    .addComponent(internetQuotaText, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(capLimitL)
                    .addComponent(capLimitText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(expiryDateL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayL)
                    .addComponent(dayText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthL)
                    .addComponent(monthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearL)
                    .addComponent(yearText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planCityL)
                    .addComponent(planCityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ABNL)
                    .addComponent(ABNText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfEmployeesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfEmployeesL))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        tab.addTab("Add Plan", jPanel2);

        planIDFindL.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        planIDFindL.setText("PlanID");

        planIDFindText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                planIDFindTextKeyPressed(evt);
            }
        });

        findButton.setBackground(new java.awt.Color(204, 204, 204));
        findButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        findButton.setForeground(new java.awt.Color(255, 51, 0));
        findButton.setText("Find");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });
        findButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                findButtonKeyPressed(evt);
            }
        });

        plansTextArea.setEditable(false);
        plansTextArea.setBackground(new java.awt.Color(153, 255, 153));
        plansTextArea.setColumns(20);
        plansTextArea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        plansTextArea.setRows(5);
        jScrollPane1.setViewportView(plansTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(planIDFindL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(planIDFindText, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(945, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planIDFindL, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planIDFindText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(165, Short.MAX_VALUE))
        );

        tab.addTab("Find Plan", jPanel3);

        jPanel4.setForeground(new java.awt.Color(255, 51, 0));

        plansInformationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        plansInformationTable.getTableHeader().setReorderingAllowed(false);
        plansInformationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                plansInformationTableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                plansInformationTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(plansInformationTable);

        deleteButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 51, 0));
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 0, 0));
        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(529, 529, 529)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(558, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(181, Short.MAX_VALUE))
        );

        tab.addTab("Plans Information", jPanel4);

        plansInformationTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(plansInformationTable1);

        mobileModelL1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        mobileModelL1.setText("Mobile Model");

        mobileModelText1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mobileModelText1KeyReleased(evt);
            }
        });

        expiryDateL1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        expiryDateL1.setText("Expiry Date");

        expiryDateText1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                expiryDateText1KeyPressed(evt);
            }
        });

        filterByDateButton1.setBackground(new java.awt.Color(204, 204, 204));
        filterByDateButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        filterByDateButton1.setForeground(new java.awt.Color(255, 51, 0));
        filterByDateButton1.setText("Filter By Date");
        filterByDateButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterByDateButton1ActionPerformed(evt);
            }
        });

        sortByUsernameCheck1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        sortByUsernameCheck1.setText("Sort By Username");
        sortByUsernameCheck1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortByUsernameCheck1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1292, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sortByUsernameCheck1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mobileModelL1)
                            .addComponent(expiryDateL1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mobileModelText1)
                            .addComponent(expiryDateText1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(filterByDateButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobileModelL1)
                    .addComponent(mobileModelText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expiryDateL1)
                    .addComponent(expiryDateText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterByDateButton1))
                .addGap(18, 18, 18)
                .addComponent(sortByUsernameCheck1)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        tab.addTab("Filter Plans", jPanel5);

        logoutButton.setText("Logout");
        logoutButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
        });
        menu.add(logoutButton);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 1304, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabStateChanged
        userIDText.setText(user.getUserID() + "");
        userIDText.setEnabled(false);
        nameText.setText(user.getName());
        passwordText.setText(user.getPassword());
        streetNumberText.setText(user.getStreetNum() + "");
        streetText.setText(user.getStreet());
        suburbText.setText(user.getSuburb());
        newCityText.setText(user.getCity());
        newCityText.setEnabled(false);
        cityChoice.setModel(new DefaultComboBoxModel<String>(cities.toArray(new String[0])));
        cityChoice.setSelectedItem(user.getCity());
        typeChoice.setModel(new DefaultComboBoxModel<>(MobileType.values()));
        if (personalPlanChoice.isSelected()) {
            planCityL.setVisible(true);
            planCityText.setVisible(true);
            ABNL.setVisible(false);
            ABNText.setVisible(false);
            numberOfEmployeesL.setVisible(false);
            numberOfEmployeesText.setVisible(false);
        } else {
            planCityL.setVisible(false);
            planCityText.setVisible(false);
            ABNL.setVisible(true);
            ABNText.setVisible(true);
            numberOfEmployeesL.setVisible(true);
            numberOfEmployeesText.setVisible(true);
        }        
        fillTable(plansInformationTable, new ArrayList<MobilePlan>(user.getPlans().values()));
        fillTable1();
    }//GEN-LAST:event_tabStateChanged

    private void newCityCheckStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_newCityCheckStateChanged
        if (newCityCheck.isSelected()) {
            cityChoice.setEnabled(false);
            newCityText.setEnabled(true);
            newCityText.setEditable(true);
        } else {
            cityChoice.setEnabled(true);
            newCityText.setEnabled(false);
        }
    }//GEN-LAST:event_newCityCheckStateChanged

    private void changeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeButtonActionPerformed
        changeButton();
    }//GEN-LAST:event_changeButtonActionPerformed

    private void changeButton() {
        if (isEditPersonalDataNotEmpty()) {
            user.setName(nameText.getText());
            user.setPassword(passwordText.getText());
            try {
                user.setStreetNum(Integer.parseInt(streetNumberText.getText()));
            } catch (NumberFormatException e) {
                streetNumberText.setText(user.getStreetNum() + "");
                JOptionPane.showMessageDialog(this, "Enter a number please!");
            }
            user.setStreet(streetText.getText());
            user.setSuburb(suburbL.getText());
            if (newCityCheck.isSelected()) {
                newCityText.setText(newCityText.getText().toLowerCase().substring(0, 1).toUpperCase() + newCityText.getText().toLowerCase().substring(1));
                user.setCity(newCityText.getText());
                int similarCityCount = 0;
                for (String city : cities) {
                    if (city.equals(newCityText.getText())) {
                        similarCityCount++;
                    }
                }
                if (similarCityCount == 0) {
                    cities.add(newCityText.getText());
                }
                cityChoice.setModel(new DefaultComboBoxModel<String>(cities.toArray(new String[0])));
                cityChoice.setSelectedItem(user.getCity());
            } else {
                user.setCity((String) cityChoice.getSelectedItem());
                newCityText.setText(user.getCity());
            }
            JOptionPane.showMessageDialog(this, "Done.");
        } else {
            JOptionPane.showMessageDialog(this, "All fields required.");
        }
    }

    private boolean isEditPersonalDataNotEmpty() {
        if (!nameText.getText().isEmpty() && !passwordText.getText().isEmpty() && !streetNumberText.getText().isEmpty() && !streetText.getText().isEmpty() && !suburbText.getText().isEmpty() && !newCityText.getText().isEmpty()) {
            return true;
        }
        return false;
    }

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
        this.dispose();
        login.show();
    }//GEN-LAST:event_logoutButtonMouseClicked

    private void personalPlanChoiceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_personalPlanChoiceStateChanged
        if (personalPlanChoice.isSelected()) {
            planCityL.setVisible(true);
            planCityText.setVisible(true);
            ABNL.setVisible(false);
            ABNText.setVisible(false);
            numberOfEmployeesL.setVisible(false);
            numberOfEmployeesText.setVisible(false);
        } else {
            planCityL.setVisible(false);
            planCityText.setVisible(false);
            ABNL.setVisible(true);
            ABNText.setVisible(true);
            numberOfEmployeesL.setVisible(true);
            numberOfEmployeesText.setVisible(true);
        }
    }//GEN-LAST:event_personalPlanChoiceStateChanged

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        addButton();
    }//GEN-LAST:event_addButtonActionPerformed

    private void addButton() {
        if (isAddPlanNotEmpty()) {
            try {
                int id = Integer.parseInt(planIDText.getText());
                String username = usernameText.getText();
                String model = modelText.getText();
                MobileType type = MobileType.valueOf(typeChoice.getSelectedItem().toString());
                int size = Integer.parseInt(memorySizeText.getText());
                double price = Double.parseDouble(priceText.getText());
                int quota = Integer.parseInt(internetQuotaText.getText());
                int cap = Integer.parseInt(capLimitText.getText());
                int day = Integer.parseInt(dayText.getText());
                int month = Integer.parseInt(monthText.getText());
                int year = Integer.parseInt(yearText.getText());
                if (size < 0 || price < 0 || quota < 0 || cap < 0) {
                    throw new MyException();
                }
                MyDate date = new MyDate(year, month, day);
                if (!date.isValid()) {
                    throw new MyDateException(date);
                }
                MobilePhone phone = new MobilePhone(model, type, size, price);
                MobilePlan plan;
                if (personalPlanChoice.isSelected()) {
                    String city = planCityText.getText();
                    plan = new PersonalPlan(username, id, phone, quota, cap, date, city);
                } else {
                    int abn = Integer.parseInt(ABNText.getText());
                    int noEmp = Integer.parseInt(numberOfEmployeesText.getText());
                    if (abn < 0 || noEmp < 0) {
                        throw new MyException();
                    }
                    plan = new BusinessPlan(noEmp, abn, username, id, phone, quota, cap, date);
                }
                if (user.addPlan(userID, password, plan)) {
                    clear();
                    JOptionPane.showMessageDialog(this, "Plan has been successfuly added.");
                } else {
                    clear();
                    JOptionPane.showMessageDialog(this, "Plan can not be added.");
                }
            } catch (MyDateException e) {
                clear();
                JOptionPane.showMessageDialog(this, e);
            } catch (NumberFormatException e) {
                clear();
                JOptionPane.showMessageDialog(this, "Enter a number please.");
            } catch (MyException e) {
                clear();
                JOptionPane.showMessageDialog(this, e);
            }
        } else {
            JOptionPane.showMessageDialog(this, "All fields required.");
        }
    }

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clear();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        findButton();
    }//GEN-LAST:event_findButtonActionPerformed

    private void findButton() {
        try {
            MobilePlan plan = mobileCompany.findPlan(userID, Integer.parseInt(planIDFindText.getText()));
            if (plan != null) {
                plansTextArea.append(plan.toString() + "\n");
                planIDFindText.setText("");
            } else {
                plansTextArea.append("Plan with ID = " + Integer.parseInt(planIDFindText.getText()) + " has not been found\n");
                planIDFindText.setText("");
            }
        } catch (NumberFormatException e) {
            planIDFindText.setText("");
            JOptionPane.showMessageDialog(this, "Enter a number please.");
        }
    }

    private void nameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            changeButton();
        }
    }//GEN-LAST:event_nameTextKeyPressed

    private void passwordTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            changeButton();
        }
    }//GEN-LAST:event_passwordTextKeyPressed

    private void streetNumberTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_streetNumberTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            changeButton();
        }
    }//GEN-LAST:event_streetNumberTextKeyPressed

    private void streetTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_streetTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            changeButton();
        }
    }//GEN-LAST:event_streetTextKeyPressed

    private void suburbTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_suburbTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            changeButton();
        }
    }//GEN-LAST:event_suburbTextKeyPressed

    private void cityChoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cityChoiceKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            changeButton();
        }
    }//GEN-LAST:event_cityChoiceKeyPressed

    private void newCityTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newCityTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            changeButton();
        }
    }//GEN-LAST:event_newCityTextKeyPressed

    private void planIDTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_planIDTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_planIDTextKeyPressed

    private void usernameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_usernameTextKeyPressed

    private void modelTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_modelTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_modelTextKeyPressed

    private void typeChoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_typeChoiceKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_typeChoiceKeyPressed

    private void memorySizeTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_memorySizeTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_memorySizeTextKeyPressed

    private void priceTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_priceTextKeyPressed

    private void internetQuotaTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_internetQuotaTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_internetQuotaTextKeyPressed

    private void capLimitTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_capLimitTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_capLimitTextKeyPressed

    private void dayTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dayTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_dayTextKeyPressed

    private void monthTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_monthTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_monthTextKeyPressed

    private void yearTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_yearTextKeyPressed

    private void planCityTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_planCityTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_planCityTextKeyPressed

    private void ABNTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ABNTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_ABNTextKeyPressed

    private void numberOfEmployeesTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberOfEmployeesTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton();
        }
    }//GEN-LAST:event_numberOfEmployeesTextKeyPressed

    private void planIDFindTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_planIDFindTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            findButton();
        }
    }//GEN-LAST:event_planIDFindTextKeyPressed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        deleteButton();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        updateButton();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMenuActionPerformed
        deleteButton();
    }//GEN-LAST:event_deleteMenuActionPerformed

    private void updateMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMenuActionPerformed
        updateButton();
    }//GEN-LAST:event_updateMenuActionPerformed

    private void plansInformationTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_plansInformationTableMousePressed
        if(evt.isPopupTrigger()){
            showPopUp(evt);
        }
    }//GEN-LAST:event_plansInformationTableMousePressed

    private void plansInformationTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_plansInformationTableMouseReleased
        if(evt.isPopupTrigger()){
            showPopUp(evt);
        }
    }//GEN-LAST:event_plansInformationTableMouseReleased

    private void mobileModelText1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileModelText1KeyReleased
        fillTable1();
    }//GEN-LAST:event_mobileModelText1KeyReleased

    private void filterByDateButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterByDateButton1ActionPerformed
        fillTable1();
    }//GEN-LAST:event_filterByDateButton1ActionPerformed

    private void sortByUsernameCheck1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByUsernameCheck1ActionPerformed
        fillTable1();
    }//GEN-LAST:event_sortByUsernameCheck1ActionPerformed

    private void expiryDateText1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expiryDateText1KeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            fillTable1();
        }
    }//GEN-LAST:event_expiryDateText1KeyPressed

    private void changeButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_changeButtonKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            changeButton();
        }
    }//GEN-LAST:event_changeButtonKeyPressed

    private void addButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addButtonKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            addButton();
        }
    }//GEN-LAST:event_addButtonKeyPressed

    private void clearButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clearButtonKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            clear();
        }
    }//GEN-LAST:event_clearButtonKeyPressed

    private void findButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_findButtonKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            findButton();
        }
    }//GEN-LAST:event_findButtonKeyPressed

    private void showPopUp(MouseEvent e){
        popUpMenu.show(this, e.getXOnScreen(), e.getYOnScreen());
    }
    
    private void deleteButton() {
        int ind = plansInformationTable.getSelectedRow();
        if (ind >= 0) {
            int id = Integer.parseInt(plansInformationTable.getValueAt(ind, 0).toString());
            user.getPlans().remove(id);
            fillTable(plansInformationTable, new ArrayList<MobilePlan>(user.getPlans().values()));
        }
    }

    private void updateButton() {
        int ind = plansInformationTable.getSelectedRow();
        if (ind >= 0) {
            int id = Integer.parseInt(plansInformationTable.getValueAt(ind, 0).toString());
            UpdateUI updateUI = new UpdateUI(user.getPlans().get(id), this, 0);                                  
            updateUI.setVisible(true);
        }
    }

    private void clear() {
        planIDText.setText("");
        usernameText.setText("");
        modelText.setText("");
        memorySizeText.setText("");
        priceText.setText("");
        internetQuotaText.setText("");
        capLimitText.setText("");
        dayText.setText("");
        monthText.setText("");
        yearText.setText("");
        planCityText.setText("");
        ABNText.setText("");
        numberOfEmployeesText.setText("");
    }

    private boolean isAddPlanNotEmpty() {
        if (!planIDText.getText().isEmpty() && !usernameText.getText().isEmpty() && !modelText.getText().isEmpty() && !memorySizeText.getText().isEmpty() && !priceText.getText().isEmpty() && !internetQuotaText.getText().isEmpty() && !capLimitText.getText().isEmpty() && !dayText.getText().isEmpty() && !monthText.getText().isEmpty() && !yearText.getText().isEmpty()) {
            return true;
        }
        return false;
    }

    public void fillTable(JTable table, ArrayList<MobilePlan> plans) {
        String[] header = {"Plan ID", "Username", "Model", "OS Type", "Memory Size", "handset Price", "Internet Quota", "Cap Limit", "Expiry Date", "City", "ABN", "Number OF Employees", "Mounthly Payment"};
        DefaultTableModel model = new DefaultTableModel(header, 0);
        table.setModel(model);
        for (MobilePlan plan : plans) {
            String[] row = new String[13];
            row[0] = plan.getId() + "";
            row[1] = plan.getUserName();
            row[2] = plan.getModel();
            row[3] = plan.getHandset().getType().toString();
            row[4] = plan.getHandset().getMemorySize() + "";
            row[5] = "$" + plan.getHandset().getPrice() + "";
            row[6] = plan.getInternetQuota() + "";
            row[7] = plan.getCapLimit() + "";
            row[8] = plan.getExpiryDate().toString();
            if (plan instanceof PersonalPlan) {
                row[9] = ((PersonalPlan) plan).getCity();
                row[10] = "NA";
                row[11] = "NA";
            } else {
                row[9] = "NA";
                row[10] = ((BusinessPlan) plan).getABN() + "";
                row[11] = ((BusinessPlan) plan).getNumberOfEmployees() + "";
            }
            row[12] = String.format("$%.2f", plan.calcPayment(mobileCompany.getFlatRate()));
            model.addRow(row);
        }
    }
    
    public void fillTable1(){
        try {
            ArrayList<MobilePlan> plansCopy = user.shallowCopyPlans();
            if (!mobileModelText1.getText().isEmpty()) {
                plansCopy = MobilePlan.filterByMobileModel(plansCopy, mobileModelText1.getText());
            }
            if (!expiryDateText1.getText().isEmpty()) {
                if(!Pattern.matches("\\d{1,2}\\/\\d{1,2}\\/\\d{4}", expiryDateText1.getText())){
                    throw new NumberFormatException(expiryDateText1.getText());
                }
                String[] fields = expiryDateText1.getText().split("/");
                int year = Integer.parseInt(fields[2]);
                int month = Integer.parseInt(fields[1]);
                int day = Integer.parseInt(fields[0]);                         
                MyDate date = new MyDate(year, month, day);
                if(!new MyDate(year, month, day).isValid()){
                    throw new MyDateException(date);
                }
                plansCopy = MobilePlan.filterByExpiryDate(plansCopy, date);
                
            }
            if (sortByUsernameCheck1.isSelected()) {
                Collections.sort(plansCopy);
            }
            fillTable(plansInformationTable1, plansCopy);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter DD/MM/YYYY format please.");
        } catch (MyDateException e){
            JOptionPane.showMessageDialog(this, e);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ABNL;
    private javax.swing.JTextField ABNText;
    private javax.swing.JButton addButton;
    private javax.swing.JLabel address;
    private javax.swing.JRadioButton businessPlanChoice;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel capLimitL;
    private javax.swing.JTextField capLimitText;
    private javax.swing.JButton changeButton;
    private javax.swing.JComboBox<String> cityChoice;
    private javax.swing.JLabel cityL;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel dayL;
    private javax.swing.JTextField dayText;
    private javax.swing.JButton deleteButton;
    private javax.swing.JMenuItem deleteMenu;
    private javax.swing.JLabel expiryDateL;
    private javax.swing.JLabel expiryDateL1;
    private javax.swing.JTextField expiryDateText1;
    private javax.swing.JButton filterByDateButton1;
    private javax.swing.JButton findButton;
    private javax.swing.JLabel internetQuotaL;
    private javax.swing.JTextField internetQuotaText;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JMenu logoutButton;
    private javax.swing.JLabel memorySizeL;
    private javax.swing.JTextField memorySizeText;
    private javax.swing.JMenuBar menu;
    private javax.swing.JLabel mobileModelL1;
    private javax.swing.JTextField mobileModelText1;
    private javax.swing.JLabel mobilePhoneL;
    private javax.swing.JLabel modelL;
    private javax.swing.JTextField modelText;
    private javax.swing.JLabel monthL;
    private javax.swing.JTextField monthText;
    private javax.swing.JLabel nameL;
    private javax.swing.JTextField nameText;
    private javax.swing.JCheckBox newCityCheck;
    private javax.swing.JTextField newCityText;
    private javax.swing.JLabel numberOfEmployeesL;
    private javax.swing.JTextField numberOfEmployeesText;
    private javax.swing.JLabel passwordL;
    private javax.swing.JTextField passwordText;
    private javax.swing.JRadioButton personalPlanChoice;
    private javax.swing.JLabel planCityL;
    private javax.swing.JTextField planCityText;
    private javax.swing.JLabel planIDFindL;
    private javax.swing.JTextField planIDFindText;
    private javax.swing.JLabel planIDL;
    private javax.swing.JTextField planIDText;
    private javax.swing.JTable plansInformationTable;
    private javax.swing.JTable plansInformationTable1;
    private javax.swing.JTextArea plansTextArea;
    private javax.swing.JPopupMenu popUpMenu;
    private javax.swing.JLabel priceL;
    private javax.swing.JTextField priceText;
    private javax.swing.JCheckBox sortByUsernameCheck1;
    private javax.swing.JLabel streetL;
    private javax.swing.JLabel streetNumberL;
    private javax.swing.JTextField streetNumberText;
    private javax.swing.JTextField streetText;
    private javax.swing.JLabel suburbL;
    private javax.swing.JTextField suburbText;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JComboBox<MobileType> typeChoice;
    private javax.swing.JLabel typeL;
    private javax.swing.JButton updateButton;
    private javax.swing.JMenuItem updateMenu;
    private javax.swing.JLabel userIDL;
    private javax.swing.JTextField userIDText;
    private javax.swing.JLabel usernameL;
    private javax.swing.JTextField usernameText;
    private javax.swing.JLabel yearL;
    private javax.swing.JTextField yearText;
    // End of variables declaration//GEN-END:variables
}
